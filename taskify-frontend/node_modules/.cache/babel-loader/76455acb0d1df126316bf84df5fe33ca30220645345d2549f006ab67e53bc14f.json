{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAMYA\\\\Taskify\\\\taskify-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom'; // Updated import for routing\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport TaskForm from './components/TaskForm';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // State to store tasks\n  const navigate = useNavigate();\n\n  // Add task function\n  const addTask = task => {\n    setTasks([...tasks, task]);\n  };\n\n  // Delete task function\n  const deleteTask = taskToDelete => {\n    setTasks(tasks.filter(task => task !== taskToDelete));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            navigate: navigate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 22\n          }, this) // Pass navigate prop to handle redirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/task-form\",\n          element: /*#__PURE__*/_jsxDEV(TaskForm, {\n            tasks: tasks,\n            addTask: addTask,\n            deleteTask: deleteTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4ZiLHWb9f+F90FIvgKs+LD4IhaA=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","useNavigate","Navbar","Login","TaskForm","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","navigate","addTask","task","deleteTask","taskToDelete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","_c","$RefreshReg$"],"sources":["C:/Users/RAMYA/Taskify/taskify-frontend/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom'; // Updated import for routing\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport TaskForm from './components/TaskForm';\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]); // State to store tasks\r\n  const navigate = useNavigate();\r\n\r\n  // Add task function\r\n  const addTask = (task) => {\r\n    setTasks([...tasks, task]);\r\n  };\r\n\r\n  // Delete task function\r\n  const deleteTask = (taskToDelete) => {\r\n    setTasks(tasks.filter((task) => task !== taskToDelete));\r\n  };\r\n\r\n  return (\r\n    <Router> {/* Wrap the entire app in Router */}\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Routes>\r\n          <Route\r\n            path=\"/login\"\r\n            element={<Login navigate={navigate} />} // Pass navigate prop to handle redirect\r\n          />\r\n          <Route\r\n            path=\"/task-form\"\r\n            element={<TaskForm tasks={tasks} addTask={addTask} deleteTask={deleteTask} />}\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AACxF,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAMe,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMW,OAAO,GAAIC,IAAI,IAAK;IACxBH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEI,IAAI,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIC,YAAY,IAAK;IACnCL,QAAQ,CAACD,KAAK,CAACO,MAAM,CAAEH,IAAI,IAAKA,IAAI,KAAKE,YAAY,CAAC,CAAC;EACzD,CAAC;EAED,oBACET,OAAA,CAACR,MAAM;IAAAmB,QAAA,GAAC,GAAC,eACPX,OAAA,CAACJ,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVf,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAL,QAAA,eACxBX,OAAA,CAACP,MAAM;QAAAkB,QAAA,gBACLX,OAAA,CAACN,KAAK;UACJuB,IAAI,EAAC,QAAQ;UACbC,OAAO,eAAElB,OAAA,CAACH,KAAK;YAACQ,QAAQ,EAAEA;UAAS;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACFf,OAAA,CAACN,KAAK;UACJuB,IAAI,EAAC,YAAY;UACjBC,OAAO,eAAElB,OAAA,CAACF,QAAQ;YAACK,KAAK,EAAEA,KAAM;YAACG,OAAO,EAAEA,OAAQ;YAACE,UAAU,EAAEA;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACb,EAAA,CA/BQD,GAAG;EAAA,QAEON,WAAW;AAAA;AAAAwB,EAAA,GAFrBlB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}