{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAMYA\\\\Taskify\\\\taskify-frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\n// src/components/TaskForm.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  tasks,\n  addTask,\n  deleteTask\n}) {\n  _s();\n  const [newTask, setNewTask] = useState('');\n  const handleAddTask = () => {\n    if (newTask) {\n      addTask(newTask); // Add task to state\n      setNewTask(''); // Clear input field\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"Enter task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Task List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks added yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"QOAGQFXMDiH3FEIJhH0k9gfFdKU=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","tasks","addTask","deleteTask","_s","newTask","setNewTask","handleAddTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","length","map","task","index","_c","$RefreshReg$"],"sources":["C:/Users/RAMYA/Taskify/taskify-frontend/src/components/TaskForm.js"],"sourcesContent":["// src/components/TaskForm.js\r\nimport React, { useState } from 'react';\r\n\r\nfunction TaskForm({ tasks, addTask, deleteTask }) {\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask) {\r\n      addTask(newTask); // Add task to state\r\n      setNewTask(''); // Clear input field\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-form-container\">\r\n      <h2>Task Form</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        placeholder=\"Enter task\"\r\n      />\r\n      <button onClick={handleAddTask}>Add Task</button>\r\n\r\n      <h3>Task List:</h3>\r\n      <ul>\r\n        {tasks.length > 0 ? (\r\n          tasks.map((task, index) => (\r\n            <li key={index}>\r\n              {task}\r\n              <button onClick={() => deleteTask(task)}>Delete</button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No tasks added yet.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n \r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,OAAO,EAAE;MACXH,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC;MAClBC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKS,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCV,OAAA;MAAAU,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEV,OAAQ;MACfW,QAAQ,EAAGC,CAAC,IAAKX,UAAU,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAY;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFd,OAAA;MAAQqB,OAAO,EAAEb,aAAc;MAAAE,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEjDd,OAAA;MAAAU,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBd,OAAA;MAAAU,QAAA,EACGR,KAAK,CAACoB,MAAM,GAAG,CAAC,GACfpB,KAAK,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBzB,OAAA;QAAAU,QAAA,GACGc,IAAI,eACLxB,OAAA;UAAQqB,OAAO,EAAEA,CAAA,KAAMjB,UAAU,CAACoB,IAAI,CAAE;UAAAd,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFjDW,KAAK;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL,CAAC,gBAEFd,OAAA;QAAAU,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC1B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACT,EAAA,CApCQJ,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAsCjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}