{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAMYA\\\\Taskify\\\\taskify-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; // Import necessary components\nimport Navbar from './components/Navbar'; // Navbar (optional, you can customize it if needed)\nimport TaskForm from './components/TaskForm'; // TaskForm component for managing tasks\nimport './styles.css'; // Make sure your CSS is linked\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // State to store tasks\n\n  // Add task function\n  const addTask = task => {\n    setTasks([...tasks, task]);\n  };\n\n  // Delete task function\n  const deleteTask = taskToDelete => {\n    setTasks(tasks.filter(task => task !== taskToDelete));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(TaskForm, {\n            tasks: tasks,\n            addTask: addTask,\n            deleteTask: deleteTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 22\n          }, this) // Task form page (no login page)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navbar","TaskForm","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","addTask","task","deleteTask","taskToDelete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","_c","$RefreshReg$"],"sources":["C:/Users/RAMYA/Taskify/taskify-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'; // Import necessary components\r\nimport Navbar from './components/Navbar'; // Navbar (optional, you can customize it if needed)\r\nimport TaskForm from './components/TaskForm'; // TaskForm component for managing tasks\r\nimport './styles.css'; // Make sure your CSS is linked\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]); // State to store tasks\r\n\r\n  // Add task function\r\n  const addTask = (task) => {\r\n    setTasks([...tasks, task]);\r\n  };\r\n\r\n  // Delete task function\r\n  const deleteTask = (taskToDelete) => {\r\n    setTasks(tasks.filter((task) => task !== taskToDelete));\r\n  };\r\n\r\n  return (\r\n    <Router> \r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Routes>\r\n          <Route\r\n            path=\"/\" \r\n            element={<TaskForm tasks={tasks} addTask={addTask} deleteTask={deleteTask} />} // Task form page (no login page)\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB,CAAC,CAAC;AAC3E,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAC9C,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMa,OAAO,GAAIC,IAAI,IAAK;IACxBF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEG,IAAI,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIC,YAAY,IAAK;IACnCJ,QAAQ,CAACD,KAAK,CAACM,MAAM,CAAEH,IAAI,IAAKA,IAAI,KAAKE,YAAY,CAAC,CAAC;EACzD,CAAC;EAED,oBACER,OAAA,CAACN,MAAM;IAAAgB,QAAA,gBACLV,OAAA,CAACH,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVd,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAL,QAAA,eACxBV,OAAA,CAACL,MAAM;QAAAe,QAAA,eACLV,OAAA,CAACJ,KAAK;UACJoB,IAAI,EAAC,GAAG;UACRC,OAAO,eAAEjB,OAAA,CAACF,QAAQ;YAACK,KAAK,EAAEA,KAAM;YAACE,OAAO,EAAEA,OAAQ;YAACE,UAAU,EAAEA;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACZ,EAAA,CA1BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}