{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAMYA\\\\Taskify\\\\taskify-frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  tasks,\n  addTask,\n  deleteTask,\n  editTask\n}) {\n  _s();\n  const [task, setTask] = useState('');\n  const [editing, setEditing] = useState(null);\n\n  // Handle task input change\n  const handleInputChange = e => {\n    setTask(e.target.value);\n  };\n\n  // Handle task completion\n  const handleCompletion = taskToComplete => {\n    const updatedTasks = tasks.map(task => task === taskToComplete ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    addTask(updatedTasks); // Assuming addTask updates the tasks list\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (task.trim()) {\n      if (editing !== null) {\n        editTask(editing, task); // Edit the task based on its index or identifier\n        setEditing(null);\n      } else {\n        addTask({\n          text: task,\n          completed: false\n        });\n      }\n      setTask('');\n    }\n  };\n\n  // Handle editing task\n  const handleEdit = taskToEdit => {\n    setTask(taskToEdit.text); // Set the task text in the input field\n    setEditing(taskToEdit); // Set the task as being edited\n  };\n\n  // Handle task deletion\n  const handleDelete = taskToDelete => {\n    deleteTask(taskToDelete); // Assuming deleteTask removes the task\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: task,\n        onChange: handleInputChange,\n        placeholder: \"Enter task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editing ? 'Update Task' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((taskItem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: taskItem.completed ? 'line-through' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: taskItem.completed,\n          onChange: () => handleCompletion(taskItem)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), taskItem.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(taskItem),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(taskItem),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"gs//NhwxtsQFhr7kvCWc0IyHqtQ=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","tasks","addTask","deleteTask","editTask","_s","task","setTask","editing","setEditing","handleInputChange","e","target","value","handleCompletion","taskToComplete","updatedTasks","map","completed","handleSubmit","preventDefault","trim","text","handleEdit","taskToEdit","handleDelete","taskToDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","taskItem","index","style","textDecoration","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/RAMYA/Taskify/taskify-frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction TaskForm({ tasks, addTask, deleteTask, editTask }) {\r\n  const [task, setTask] = useState('');\r\n  const [editing, setEditing] = useState(null);\r\n\r\n  // Handle task input change\r\n  const handleInputChange = (e) => {\r\n    setTask(e.target.value);\r\n  };\r\n\r\n  // Handle task completion\r\n  const handleCompletion = (taskToComplete) => {\r\n    const updatedTasks = tasks.map((task) =>\r\n      task === taskToComplete ? { ...task, completed: !task.completed } : task\r\n    );\r\n    addTask(updatedTasks); // Assuming addTask updates the tasks list\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (task.trim()) {\r\n      if (editing !== null) {\r\n        editTask(editing, task); // Edit the task based on its index or identifier\r\n        setEditing(null);\r\n      } else {\r\n        addTask({ text: task, completed: false });\r\n      }\r\n      setTask('');\r\n    }\r\n  };\r\n\r\n  // Handle editing task\r\n  const handleEdit = (taskToEdit) => {\r\n    setTask(taskToEdit.text); // Set the task text in the input field\r\n    setEditing(taskToEdit); // Set the task as being edited\r\n  };\r\n\r\n  // Handle task deletion\r\n  const handleDelete = (taskToDelete) => {\r\n    deleteTask(taskToDelete); // Assuming deleteTask removes the task\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={task}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter task\"\r\n        />\r\n        <button type=\"submit\">{editing ? 'Update Task' : 'Add Task'}</button>\r\n      </form>\r\n\r\n      <h3>Task List</h3>\r\n      <ul>\r\n        {tasks.map((taskItem, index) => (\r\n          <li key={index} style={{ textDecoration: taskItem.completed ? 'line-through' : 'none' }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={taskItem.completed}\r\n              onChange={() => handleCompletion(taskItem)}\r\n            />\r\n            {taskItem.text}\r\n            <button onClick={() => handleEdit(taskItem)}>Edit</button>\r\n            <button onClick={() => handleDelete(taskItem)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}